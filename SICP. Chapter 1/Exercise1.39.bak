#lang racket

(define (cont-frac n d k)
  (define (iter i result)
    (if (= i 0)
        result
        (iter (- i 1) (/ (n i) (+ (d i) result)))))
  (iter (- k 1) (/ (n k) (d k))))



(define (tan-cf x k)
  (/ x (- 1 (cont-frac (lambda (i) (* x x)) (lambda (i) (+ (* 2 i) 1)) k))))
  