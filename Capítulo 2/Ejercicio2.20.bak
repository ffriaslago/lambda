#lang racket
(define (parity-filter parity list)
  (let ((l1 (car (list))))
    (if (parity l1)
        (append (list l1) (parity-filter parity (cdr list)))
        (parity-filter parity (cdr list)))))

(define (same-parity x . y)
  (if (null? y)
      x
      (if (even? x)
          (cons x (parity-filter even? y))
          (cons x (parity-filter odd? y)))))

(same-parity 1 2 3 4 5 6 7)
(1 3 5 7)

(same-parity 2 3 4 5 6 7)
(2 4 6)