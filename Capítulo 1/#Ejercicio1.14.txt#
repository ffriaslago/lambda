Starting from (count change 11) and assuming that it is only considered three different coins, the first call to cc would be
(cc 11 3)
From here, the important case is the (cc 0 1) call, which gives 1 different combination. 
The cases which amount computes to a negative value will be treated as null
The cases which kinds-of-coins computes to a 0 value will be treated as null
Example:
(cc 1 3) descomposes in (cc 1 2), which is OK, and (cc -9 3), which is null and will be indicated as that in the following tree

(cc 11 3)
|     \
|      \
|       \_______________________________________________________
|                                                               \
(cc 11 2)                                                      (cc 1 3)
|       \_________________________                              |     \__
|                                 \                             |        \
(cc 11 1)                        (cc 6 2)                      (cc 1 2)  null
|       \___                      |     \__                     |     \__
|           \                     |        \                    |        \
null    (cc 10 1)            (cc 6 1) (cc 1 2)                (cc 1 1)   null
         __/ |                 __/ |       |     \__            |         \__
        /    |                /    |       |        \           |            \
     null  (cc 9 1)        null (cc 5 1) (cc 1 1)  null       null        (cc 0 1)
        __/ |                 __/ \       \     \__                           |
        /    |                /    |       |       \                          |
     null  (cc 8 1)        null (cc 4 1) null   (cc 0 1)                      +1
         __/ |                 __/ |                |
        /    |                /    |                |
     null  (cc 7 1)        null (cc 3 1)            +1
         __/ |                 __/ |
        /    |                /    |
     null  (cc 6 1)        null (cc 2 1)
         __/ |                 __/ |
        /    |                /    |
     null  (cc 5 1)        null (cc 1 1)
         __/ |                 __/ |
        /    |                /    |
     null  (cc 4 1)        null (cc 0 1)
         __/ |                     |
        /    |                     |
     null  (cc 3 1)                +1
         __/ |
        /    |
     null  (cc 2 1)
         __/ |
        /    |
     null  (cc 1 1)
         __/ |
        /    |
     null  (cc 0 1)
             |
             |
             +1         

Therefore, there are 4 different combinations.          

Answering to the order of growth of the space and number of steps.

Growth of space: larger series of calls is associated to (cc 11 1), i.e., the pennies. It has to go from (cc 11 1) to (cc 1 1) and finally to (cc 0 1).
This means that you can generate change of 11 cents as 11 pennies, so the growth of space is O(n) being n the amount in cents. 
Another way of expressing this is saying (cc n 1) has order O(n), and it is almost straighforward to reach (cc n 1) starting with (cc n m) being 1<=m<=5.  

Growth of number of steps: (cc n 1) has order O(n) as seen
(cc n 2) decomposes in (cc n 1) and (cc n-5 2), consequently, (cc n-5 2) desomposes in (cc n-5 1) and (cc n-10 1) 
Therefore it can be approximated the number of decompositions by n/5, having each decomposition O(n), i.e., (cc n 2) has O(n^2)
(cc n 3) descomposes in (cc n 2) and (cc n-10 3), so n/10 decompositions, each of one with order O(n^2), i.e., (cc n 3) has O(n^3).
Following this logic, the growth of the number of steps in a call of (cc n k) has order O(n^k)  